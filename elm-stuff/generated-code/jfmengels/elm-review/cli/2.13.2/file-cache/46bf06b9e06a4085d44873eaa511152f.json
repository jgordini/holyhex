[1,[[1,1,5,6,[0,[[1,8,1,17,["Game","Word"]],[1,18,5,6,[1,[[2,7,2,26,[1,"randomWordGenerator"]],[3,7,3,29,[1,"checkWordAgainstTarget"]],[4,7,4,22,[1,"getWordFromGrid"]]]]]]]],[[7,1,7,13,[[7,8,7,13,["Array"]],[0],[0]]],[8,1,8,14,[[8,8,8,14,["Random"]],[0],[0]]],[9,1,9,48,[[9,8,9,18,["Game","Types"]],[0],[1,[9,19,9,48,[1,[[9,29,9,41,[3,["HexState",[1,[9,37,9,41]]]]],[9,43,9,47,[2,"Grid"]]]]]]]]],[[15,1,18,16,[2,[[0],[15,6,15,17,"LetterState"],[],[[16,7,16,22,[[16,7,16,22,"CorrectPosition"],[]]],[17,7,17,20,[[17,7,17,20,"WrongPosition"],[]]],[18,7,18,16,[[18,7,18,16,"NotInWord"],[]]]]]]],[24,1,33,56,[0,[[0],[1,[24,1,24,69,[[24,1,24,20,"randomWordGenerator"],[24,23,24,69,[6,[24,23,24,34,[1,[24,23,24,27,[[],"List"]],[[24,28,24,34,[1,[24,28,24,34,[[],"String"]],[]]]]]],[24,38,24,69,[1,[24,38,24,54,[["Random"],"Generator"]],[[24,55,24,69,[1,[24,56,24,61,[[],"Maybe"]],[[24,62,24,68,[1,[24,62,24,68,[[],"String"]],[]]]]]]]]]]]]]],[25,1,33,56,[[25,1,25,20,"randomWordGenerator"],[[25,21,25,32,[11,"targetWords"]]],[26,5,33,56,[16,[[[27,9,27,47,[0,[[0],[0],[27,9,27,47,[[27,9,27,18,"wordArray"],[],[27,21,27,47,[0,[[27,21,27,35,[2,["Array"],"fromList"]],[27,36,27,47,[2,[],"targetWords"]]]]]]]]]]],[29,5,33,56,[11,[29,8,29,31,[0,[[29,8,29,21,[2,["Array"],"isEmpty"]],[29,22,29,31,[2,[],"wordArray"]]]]],[30,9,30,32,[0,[[30,9,30,24,[2,["Random"],"constant"]],[30,25,30,32,[2,[],"Nothing"]]]]],[32,9,33,56,[0,[[32,9,32,19,[2,["Random"],"map"]],[32,20,32,57,[7,[32,21,32,56,[18,[[[32,22,32,27,[11,"index"]]],[32,31,32,56,[0,[[32,31,32,40,[2,["Array"],"get"]],[32,41,32,46,[2,[],"index"]],[32,47,32,56,[2,[],"wordArray"]]]]]]]]]],[33,13,33,56,[7,[33,14,33,55,[0,[[33,14,33,24,[2,["Random"],"int"]],[33,25,33,26,[3,0]],[33,27,33,55,[7,[33,28,33,54,[1,"-",0,[33,28,33,50,[0,[[33,28,33,40,[2,["Array"],"length"]],[33,41,33,50,[2,[],"wordArray"]]]]],[33,53,33,54,[3,1]]]]]]]]]]]]]]]]]]]]]]]],[39,1,51,24,[0,[[0],[1,[39,1,39,46,[[39,1,39,16,"getWordFromGrid"],[39,19,39,46,[6,[39,19,39,23,[1,[39,19,39,23,[[],"Grid"]],[]]],[39,27,39,46,[6,[39,27,39,30,[1,[39,27,39,30,[[],"Int"]],[]]],[39,34,39,46,[1,[39,34,39,39,[[],"Maybe"]],[[39,40,39,46,[1,[39,40,39,46,[[],"String"]],[]]]]]]]]]]]]],[40,1,51,24,[[40,1,40,16,"getWordFromGrid"],[[40,17,40,21,[11,"grid"]],[40,22,40,30,[11,"rowIndex"]]],[41,5,51,24,[17,[[41,10,41,33,[0,[[41,10,41,19,[2,["Array"],"get"]],[41,20,41,28,[2,[],"rowIndex"]],[41,29,41,33,[2,[],"grid"]]]]],[[[42,9,42,16,[12,[[],"Nothing"],[]]],[42,20,42,27,[2,[],"Nothing"]]],[[43,9,43,17,[12,[[],"Just"],[[43,14,43,17,[11,"row"]]]]],[44,13,51,24,[16,[[[45,17,46,46,[0,[[0],[0],[45,17,46,46,[[45,17,45,24,"letters"],[],[45,27,46,46,[1,"|>",0,[45,27,45,43,[0,[[45,27,45,39,[2,["Array"],"toList"]],[45,40,45,43,[2,[],"row"]]]]],[46,24,46,46,[0,[[46,24,46,38,[2,["List"],"filterMap"]],[46,39,46,46,[20,".letter"]]]]]]]]]]]]],[48,13,51,24,[11,[48,16,48,40,[1,"==",2,[48,16,48,35,[0,[[48,16,48,27,[2,["List"],"length"]],[48,28,48,35,[2,[],"letters"]]]]],[48,39,48,40,[3,5]]]],[49,17,49,47,[0,[[49,17,49,21,[2,[],"Just"]],[49,22,49,47,[7,[49,23,49,46,[0,[[49,23,49,38,[2,["String"],"fromList"]],[49,39,49,46,[2,[],"letters"]]]]]]]]]],[51,17,51,24,[2,[],"Nothing"]]]]]]]]]]]]]]]]],[57,1,108,29,[0,[[1,[57,1,59,3,"{-| Implements proper Wordle logic for checking words against targets.\n    Handles duplicate letters correctly with a two-pass algorithm.\n-}"]],[1,[60,1,60,59,[[60,1,60,23,"checkWordAgainstTarget"],[60,26,60,59,[6,[60,26,60,32,[1,[60,26,60,32,[[],"String"]],[]]],[60,36,60,59,[6,[60,36,60,42,[1,[60,36,60,42,[[],"String"]],[]]],[60,46,60,59,[1,[60,46,60,50,[[],"List"]],[[60,51,60,59,[1,[60,51,60,59,[[],"HexState"]],[]]]]]]]]]]]]],[61,1,108,29,[[61,1,61,23,"checkWordAgainstTarget"],[[61,24,61,29,[11,"guess"]],[61,30,61,36,[11,"target"]]],[62,5,108,29,[16,[[[63,9,63,58,[0,[[0],[0],[63,9,63,58,[[63,9,63,19,"guessChars"],[],[63,22,63,58,[0,[[63,22,63,35,[2,["String"],"toList"]],[63,36,63,58,[7,[63,37,63,57,[0,[[63,37,63,51,[2,["String"],"toLower"]],[63,52,63,57,[2,[],"guess"]]]]]]]]]]]]]]],[64,9,64,60,[0,[[0],[0],[64,9,64,60,[[64,9,64,20,"targetChars"],[],[64,23,64,60,[0,[[64,23,64,36,[2,["String"],"toList"]],[64,37,64,60,[7,[64,38,64,59,[0,[[64,38,64,52,[2,["String"],"toLower"]],[64,53,64,59,[2,[],"target"]]]]]]]]]]]]]]],[67,9,78,39,[0,[[0],[0],[67,9,78,39,[[67,9,67,21,"exactMatches"],[],[68,13,78,39,[1,"|>",0,[68,13,77,25,[0,[[68,13,68,28,[2,["List"],"indexedMap"]],[68,29,77,14,[7,[68,30,76,32,[18,[[[68,31,68,32,[11,"i"]],[68,33,68,42,[11,"guessChar"]]],[69,17,76,32,[17,[[69,22,69,58,[1,"|>",0,[69,22,69,45,[0,[[69,22,69,31,[2,["List"],"drop"]],[69,32,69,33,[2,[],"i"]],[69,34,69,45,[2,[],"targetChars"]]]]],[69,49,69,58,[2,["List"],"head"]]]],[[[70,21,70,36,[12,[[],"Just"],[[70,26,70,36,[11,"targetChar"]]]]],[71,25,74,36,[11,[71,28,71,51,[1,"==",2,[71,28,71,37,[2,[],"guessChar"]],[71,41,71,51,[2,[],"targetChar"]]]],[72,29,72,35,[0,[[72,29,72,33,[2,[],"Just"]],[72,34,72,35,[2,[],"i"]]]]],[74,29,74,36,[2,[],"Nothing"]]]]],[[75,21,75,28,[12,[[],"Nothing"],[]]],[76,25,76,32,[2,[],"Nothing"]]]]]]]]]]]],[77,15,77,25,[2,[],"guessChars"]]]]],[78,16,78,39,[0,[[78,16,78,30,[2,["List"],"filterMap"]],[78,31,78,39,[2,[],"identity"]]]]]]]]]]]],[81,9,88,39,[0,[[0],[0],[81,9,88,39,[[81,9,81,29,"remainingTargetChars"],[],[82,13,88,39,[1,"|>",0,[82,13,87,26,[0,[[82,13,82,28,[2,["List"],"indexedMap"]],[82,29,87,14,[7,[82,30,86,30,[18,[[[82,31,82,32,[11,"i"]],[82,33,82,37,[11,"char"]]],[83,17,86,30,[11,[83,20,83,46,[0,[[83,20,83,31,[2,["List"],"member"]],[83,32,83,33,[2,[],"i"]],[83,34,83,46,[2,[],"exactMatches"]]]]],[84,21,84,28,[2,[],"Nothing"]],[86,21,86,30,[0,[[86,21,86,25,[2,[],"Just"]],[86,26,86,30,[2,[],"char"]]]]]]]]]]]],[87,15,87,26,[2,[],"targetChars"]]]]],[88,16,88,39,[0,[[88,16,88,30,[2,["List"],"filterMap"]],[88,31,88,39,[2,[],"identity"]]]]]]]]]]]],[91,9,106,41,[1,[91,9,91,25,[7,[[91,10,91,21,[11,"finalStates"]],[91,23,91,24,[0]]]]],[92,13,106,41,[1,"|>",0,[92,13,103,25,[0,[[92,13,92,28,[2,["List"],"indexedMap"]],[92,29,103,14,[7,[92,30,102,52,[18,[[[92,31,92,32,[11,"i"]],[92,33,92,42,[11,"guessChar"]]],[93,17,102,52,[11,[93,20,93,46,[0,[[93,20,93,31,[2,["List"],"member"]],[93,32,93,33,[2,[],"i"]],[93,34,93,46,[2,[],"exactMatches"]]]]],[94,21,94,52,[6,[[94,22,94,29,[2,[],"Correct"]],[94,31,94,51,[2,[],"remainingTargetChars"]]]]],[96,21,102,52,[17,[[96,26,96,81,[0,[[96,26,96,37,[2,["List"],"filter"]],[96,38,96,60,[7,[96,39,96,59,[18,[[[96,40,96,41,[11,"c"]]],[96,45,96,59,[1,"==",2,[96,45,96,46,[2,[],"c"]],[96,50,96,59,[2,[],"guessChar"]]]]]]]]],[96,61,96,81,[2,[],"remainingTargetChars"]]]]],[[[97,25,97,27,[10,[]]],[97,31,97,61,[6,[[97,32,97,38,[2,[],"Absent"]],[97,40,97,60,[2,[],"remainingTargetChars"]]]]]],[[98,25,98,31,[9,[98,25,98,26,[0]],[98,30,98,31,[0]]]],[99,29,102,52,[16,[[[100,33,100,100,[0,[[0],[0],[100,33,100,100,[[100,33,100,45,"newRemaining"],[],[100,48,100,100,[0,[[100,48,100,69,[2,[],"removeFirstOccurrence"]],[100,70,100,79,[2,[],"guessChar"]],[100,80,100,100,[2,[],"remainingTargetChars"]]]]]]]]]]],[102,29,102,52,[6,[[102,30,102,37,[2,[],"Present"]],[102,39,102,51,[2,[],"newRemaining"]]]]]]]]]]]]]]]]]]]],[103,15,103,25,[2,[],"guessChars"]]]]],[104,16,106,41,[0,[[104,16,104,26,[2,["List"],"foldl"]],[104,27,106,14,[7,[104,28,105,45,[18,[[[104,29,104,47,[7,[[104,30,104,35,[11,"state"]],[104,37,104,46,[11,"remaining"]]]]],[104,48,104,74,[7,[[104,49,104,55,[11,"states"]],[104,57,104,73,[11,"currentRemaining"]]]]]],[105,17,105,45,[6,[[105,18,105,33,[1,"::",1,[105,18,105,23,[2,[],"state"]],[105,27,105,33,[2,[],"states"]]]],[105,35,105,44,[2,[],"remaining"]]]]]]]]]],[106,15,106,41,[6,[[106,16,106,18,[9,[]]],[106,20,106,40,[2,[],"remainingTargetChars"]]]]]]]]]]]]],[108,5,108,29,[0,[[108,5,108,17,[2,["List"],"reverse"]],[108,18,108,29,[2,[],"finalStates"]]]]]]]]]]]]],[114,1,122,59,[0,[[0],[1,[114,1,114,55,[[114,1,114,22,"removeFirstOccurrence"],[114,25,114,55,[6,[114,25,114,29,[1,[114,25,114,29,[[],"Char"]],[]]],[114,33,114,55,[6,[114,33,114,42,[1,[114,33,114,37,[[],"List"]],[[114,38,114,42,[1,[114,38,114,42,[[],"Char"]],[]]]]]],[114,46,114,55,[1,[114,46,114,50,[[],"List"]],[[114,51,114,55,[1,[114,51,114,55,[[],"Char"]],[]]]]]]]]]]]]],[115,1,122,59,[[115,1,115,22,"removeFirstOccurrence"],[[115,23,115,29,[11,"target"]],[115,30,115,35,[11,"chars"]]],[116,5,122,59,[17,[[116,10,116,15,[2,[],"chars"]],[[[117,9,117,11,[10,[]]],[117,15,117,17,[9,[]]]],[[118,9,118,22,[9,[118,9,118,14,[11,"first"]],[118,18,118,22,[11,"rest"]]]],[119,13,122,59,[11,[119,16,119,31,[1,"==",2,[119,16,119,21,[2,[],"first"]],[119,25,119,31,[2,[],"target"]]]],[120,17,120,21,[2,[],"rest"]],[122,17,122,59,[1,"::",1,[122,17,122,22,[2,[],"first"]],[122,26,122,59,[0,[[122,26,122,47,[2,[],"removeFirstOccurrence"]],[122,48,122,54,[2,[],"target"]],[122,55,122,59,[2,[],"rest"]]]]]]]]]]]]]]]]]]]],[[12,1,12,9,"-- TYPES"],[21,1,21,19,"-- WORD GENERATION"],[36,1,36,19,"-- WORD EXTRACTION"],[54,1,54,27,"-- WORD CHECKING ALGORITHM"],[66,9,66,58,"-- First pass: mark exact matches (green/Correct)"],[80,9,80,64,"-- Get remaining target chars (excluding exact matches)"],[90,9,90,84,"-- Second pass: mark present letters (yellow/Present) for non-exact matches"],[111,1,111,20,"-- HELPER FUNCTIONS"]]]]